const FamilyService = require('./services/familyService');

console.log('üß™ Test validation m√©tier students');

// Test 1: Donn√©es valides
try {
  FamilyService.validateStudentData({
    firstName: 'Jean',
    lastName: 'Dupont',
    school: { name: 'Lyc√©e Victor Hugo', grade: 'Terminale' },
    contact: { phone: '0123456789' },
    address: { street: '123 rue', city: 'Paris', postalCode: '75001' }
  });
  console.log('‚úÖ Test 1 OK: Donn√©es compl√®tes valides');
} catch (e) {
  console.log('‚ùå Test 1 FAIL:', e.message);
}

// Test 2: School incomplet (doit √©chouer)
try {
  FamilyService.validateStudentData({
    firstName: 'Jean',
    lastName: 'Dupont',
    school: { name: 'Lyc√©e Victor Hugo' } // grade manquant
  });
  console.log('‚ùå Test 2 FAIL: Aurait d√ª √©chouer');
} catch (e) {
  console.log('‚úÖ Test 2 OK: √âcole incompl√®te d√©tect√©e -', e.message);
}

// Test 3: Contact vide (doit √©chouer)
try {
  FamilyService.validateStudentData({
    firstName: 'Jean',
    lastName: 'Dupont',
    contact: {} // phone et email vides
  });
  console.log('‚ùå Test 3 FAIL: Aurait d√ª √©chouer');
} catch (e) {
  console.log('‚úÖ Test 3 OK: Contact vide d√©tect√© -', e.message);
}

// Test 4: Address incompl√®te (doit √©chouer)
try {
  FamilyService.validateStudentData({
    firstName: 'Jean',
    lastName: 'Dupont',
    address: { street: '123 rue', city: 'Paris' } // postalCode manquant
  });
  console.log('‚ùå Test 4 FAIL: Aurait d√ª √©chouer');
} catch (e) {
  console.log('‚úÖ Test 4 OK: Adresse incompl√®te d√©tect√©e -', e.message);
}

// Test 5: Donn√©es minimales (doit r√©ussir)
try {
  FamilyService.validateStudentData({
    firstName: 'Jean',
    lastName: 'Dupont',
    birthDate: '2005-01-01'
  });
  console.log('‚úÖ Test 5 OK: Donn√©es minimales valides');
} catch (e) {
  console.log('‚ùå Test 5 FAIL:', e.message);
}

console.log('\nüéâ Tests de validation termin√©s');