import { useEffect } from 'react';
import { useLocation } from 'react-router-dom';
import { authService } from '../services/authService';
import { useAuth } from './useAuth';

/**
 * Hook qui Ã©tend automatiquement la session utilisateur Ã  chaque navigation
 * Utilise uniquement les changements de route pour dÃ©tecter l'activitÃ© (optimal performance)
 */
export const useActivityReset = () => {
  const location = useLocation();
  const { isAuthenticated } = useAuth();
  
  useEffect(() => {
    // Ne faire l'extension que si l'utilisateur est authentifiÃ©
    if (!isAuthenticated) {
      return;
    }

    console.log(`ğŸ”„ Navigation dÃ©tectÃ©e: ${location.pathname} - Extension de session`);
    
    // Ã‰tendre la session Ã  chaque changement de route
    authService.extendSession();
  }, [location.pathname, isAuthenticated]); // Reset seulement lors du changement de route
};